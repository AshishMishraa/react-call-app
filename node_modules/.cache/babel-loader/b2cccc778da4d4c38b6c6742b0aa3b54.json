{"ast":null,"code":"import _defineProperty from \"/Users/poojamishra/Documents/control-panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/poojamishra/Documents/control-panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/poojamishra/Documents/control-panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/poojamishra/Documents/control-panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/poojamishra/Documents/control-panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/poojamishra/Documents/control-panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/poojamishra/Documents/control-panel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/poojamishra/Documents/control-panel/src/components/ReviewAnswers.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport Header from './Common/Header';\nimport Footer from './Common/Footer';\nimport Sidebar from './Common/Sidebar';\nimport baseUrl from '../CommonFunctions';\nimport logo from '.././assets/logo.png';\n\nvar ReviewAnswers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReviewAnswers, _Component);\n\n  function ReviewAnswers() {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, ReviewAnswers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReviewAnswers).call(this));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      var self = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var formData = new FormData(document.querySelector('form'));\n      formData.append('quizs_taken_id', _this.state.quizs_taken_id);\n      axios({\n        method: 'post',\n        url: baseUrl('update-quiz-result', 'api'),\n        data: formData\n      }).then(function (response) {\n        // self.props.history.push('/my-quizs', { some: 'state' })\n        console.log(response);\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n    };\n\n    _this.handleBack = function (event) {\n      //window.location='/all-submitted-quizs/?quiz='+btoa(this.state.quiz_id);\n      _this.props.history.push('/all-submitted-quizs/?quiz=' + btoa(_this.state.quiz_id), {\n        some: 'state'\n      });\n    };\n\n    _this.state = (_this$state = {\n      userData: JSON.parse(localStorage.getItem(\"userData\")),\n      data: [],\n      quiz_id: '',\n      quiz_title: '',\n      quiz_description: '',\n      quiz_file: '',\n      quizs_taken: [],\n      quizs_taken_id: '',\n      quiz_answers: [],\n      quiz_data: [],\n      thumbImageBase: 'https://s3.us-east-2.amazonaws.com/holdingcallassets/thumb_image/',\n      quizBase: 'https://s3.us-east-2.amazonaws.com/holdingcallassets/quiz/'\n    }, _defineProperty(_this$state, \"quizs_taken\", []), _defineProperty(_this$state, \"descriptions\", []), _defineProperty(_this$state, \"questions\", []), _this$state);\n    return _this;\n  }\n\n  _createClass(ReviewAnswers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url_string = window.location.href;\n      var url = new URL(url_string);\n      var quizs_taken_id = atob(url.searchParams.get(\"quizs_taken_id\"));\n      var quiz_id = atob(url.searchParams.get(\"quiz_id\"));\n      var file = atob(url.searchParams.get(\"file\"));\n      axios.post(baseUrl('quiz?id=' + quiz_id, 'api')).then(function (res) {\n        if (res.data.errorCode == '200') {\n          var quizs = res.data.quiz;\n          var data = quizs[0];\n\n          _this2.setState({\n            quiz_file: data.file\n          });\n\n          _this2.setState({\n            quiz_title: data.title\n          });\n\n          _this2.setState({\n            quiz_description: data.description\n          });\n\n          _this2.setState({\n            quiz_id: data.id\n          });\n        }\n      });\n      axios.post(baseUrl('review-answers?quizs_taken_id=' + quizs_taken_id + '&file=' + file, 'api')).then(function (res) {\n        if (res.data.errorCode == '200') {\n          _this2.setState({\n            quizs_taken_id: quizs_taken_id\n          });\n\n          _this2.setState({\n            quizs_taken: res.data.quizs_taken\n          });\n\n          _this2.setState({\n            quiz_answers: res.data.quiz_answers\n          });\n\n          _this2.setState({\n            quiz_data: res.data.quiz_data\n          });\n\n          _this2.setState({\n            descriptions: res.data.quiz_data.quiz.descriptions[0]\n          });\n\n          _this2.setState({\n            questions: res.data.quiz_data.quiz.items[0]\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getGivenAnswerByQuestionId\",\n    value: function getGivenAnswerByQuestionId(QuestionId) {\n      var answer = '';\n      this.state.quiz_answers.map(function (answers) {\n        if (answers.question_id.replace(/ /g, '') == QuestionId.replace(/ /g, '')) {\n          answer = answers.answer;\n        }\n      });\n      return answer;\n    }\n  }, {\n    key: \"getobtainMarkByQuestionId\",\n    value: function getobtainMarkByQuestionId(QuestionId) {\n      var obtain_mark = '0';\n      this.state.quiz_answers.map(function (answers) {\n        if (answers.question_id.replace(/ /g, '') == QuestionId.replace(/ /g, '')) {\n          obtain_mark = answers.obtain_mark;\n\n          if (obtain_mark == '') {\n            obtain_mark = 0;\n          }\n        }\n      });\n      return obtain_mark;\n    }\n  }, {\n    key: \"isChecked\",\n    value: function isChecked(a, b) {\n      var checked = \"\";\n\n      if (a == b) {\n        checked = \"checked\";\n      }\n\n      return checked;\n    }\n  }, {\n    key: \"isAnswerCorrect\",\n    value: function isAnswerCorrect(a, b) {\n      var checked = true;\n\n      if (a == b) {\n        checked = false;\n      }\n\n      return checked;\n    }\n  }, {\n    key: \"handleEnterMark\",\n    value: function handleEnterMark(maxMarks, questionId, e) {\n      if (parseInt(e.target.value) > parseInt(maxMarks)) {\n        e.target.value = 0;\n        return false;\n      }\n\n      if (parseInt(e.target.value) < 1) {\n        e.target.value = 0;\n        return false;\n      }\n\n      e.target.value = e.target.value;\n\n      if (e.target.value == '') {\n        e.target.value = 0;\n        return false;\n      }\n\n      var formData = new FormData();\n      formData.append('quizs_taken_id', this.state.quizs_taken_id);\n      formData.append('questionId', questionId);\n      formData.append('obtain_mark', e.target.value);\n      axios({\n        method: 'post',\n        url: baseUrl('update-quiz-result', 'api'),\n        data: formData\n      }).then(function (response) {\n        // self.props.history.push('/my-quizs', { some: 'state' })\n        console.log(response.data.errorCode);\n\n        if (response.data.errorCode == 200) {\n          alert('Marks updated');\n        }\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n      });\n    }\n  }, {\n    key: \"insertValue\",\n    value: function insertValue(questionId, obtainMark) {\n      if (questionId != '' && questionId != null) {\n        console.log('response');\n        console.log(document.getElementById(questionId));\n        console.log('response');\n\n        if (typeof document.getElementById(questionId) !== 'undefined' && document.getElementById(questionId) !== null && document.getElementById(questionId) != '') {\n          setTimeout(function () {\n            if (typeof document.getElementById(questionId) != 'undefined' && document.getElementById(questionId) != null && document.getElementById(questionId) != '') {\n              document.getElementById(questionId).value = obtainMark;\n            }\n          }, 2000);\n        }\n      }\n    }\n  }, {\n    key: \"renderDescriptions\",\n    value: function renderDescriptions() {\n      if (typeof this.state.descriptions.description !== 'undefined') {\n        return this.state.descriptions.description.map(function (description) {\n          return React.createElement(\"div\", {\n            className: \"quiz-description-blocks\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, description.heading, \" \"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226\n            },\n            __self: this\n          }, description.content, \" \"));\n        });\n      }\n    }\n  }, {\n    key: \"renderChoices\",\n    value: function renderChoices() {}\n  }, {\n    key: \"renderQuestions\",\n    value: function renderQuestions() {\n      var _this3 = this;\n\n      if (typeof this.state.questions.item !== 'undefined') {\n        return this.state.questions.item.map(function (questions) {\n          var questionId = questions.questionId[0].replace(/ /g, '');\n          var maxMarks = questions.marks[0];\n\n          var givenAnswer = _this3.getGivenAnswerByQuestionId(questionId);\n\n          var correctIcon = \"\";\n\n          var obtainMark = _this3.getobtainMarkByQuestionId(questionId);\n\n          var obtainMarkField = \"\";\n          var correctAnswer = '';\n          console.log(givenAnswer);\n          var type = questions.$;\n          var queDes = '';\n\n          if (typeof type !== 'undefined') {\n            if (type.type == 'image') {\n              queDes = React.createElement(\"img\", {\n                src: questions.resourceUrl[0],\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 257\n                },\n                __self: this\n              });\n            }\n\n            if (type.type == 'video') {\n              queDes = React.createElement(\"video\", {\n                width: \"320\",\n                height: \"240\",\n                controls: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 259\n                },\n                __self: this\n              }, \" \", React.createElement(\"source\", {\n                src: questions.resourceUrl[0],\n                type: \"video/mp4\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 259\n                },\n                __self: this\n              }), \" \", React.createElement(\"source\", {\n                src: questions.resourceUrl[0],\n                type: \"video/ogg\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 259\n                },\n                __self: this\n              }), \" \");\n            }\n          }\n\n          var answers = '';\n          var choice1 = '';\n          var choice2 = '';\n          var choice3 = '';\n          var choice4 = '';\n\n          if (questions.questionType[0] == 'Objective') {\n            if (questions.choice[0] !== 'undefined') {\n              var value = '';\n              var text = '';\n              var correct = \"\";\n\n              if (typeof questions.choice[0].$ !== 'undefined') {\n                var ch = questions.choice[0];\n                correct = 'yes';\n                text = ch._;\n                correctAnswer = text;\n              } else {\n                correct = '';\n                text = questions.choice[0];\n              }\n\n              var checked = _this3.isChecked(givenAnswer, text);\n\n              choice1 = React.createElement(\"div\", {\n                className: \"choice-div\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 276\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                type: \"radio\",\n                checked: checked,\n                value: correct,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 277\n                },\n                __self: this\n              }), React.createElement(\"span\", {\n                className: \"choice-text\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 278\n                },\n                __self: this\n              }, \" \", text));\n            }\n\n            if (questions.choice[1] !== 'undefined') {\n              var value = '';\n              var text = '';\n              var correct = \"\";\n\n              if (typeof questions.choice[1].$ !== 'undefined') {\n                var _ch = questions.choice[1];\n                correct = 'yes';\n                text = _ch._;\n                correctAnswer = text;\n              } else {\n                correct = '';\n                text = questions.choice[1];\n              }\n\n              var checked = _this3.isChecked(givenAnswer, text);\n\n              choice2 = React.createElement(\"div\", {\n                className: \"choice-div\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 288\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                type: \"radio\",\n                checked: checked,\n                value: correct,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 289\n                },\n                __self: this\n              }), React.createElement(\"span\", {\n                className: \"choice-text\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 290\n                },\n                __self: this\n              }, \" \", text));\n            }\n\n            if (questions.choice[2] !== 'undefined') {\n              var value = '';\n              var text = '';\n              var correct = \"\";\n\n              if (typeof questions.choice[2].$ !== 'undefined') {\n                var _ch2 = questions.choice[2];\n                correct = 'yes';\n                text = _ch2._;\n                correctAnswer = text;\n              } else {\n                correct = '';\n                text = questions.choice[2];\n              }\n\n              var checked = _this3.isChecked(givenAnswer, text);\n\n              choice3 = React.createElement(\"div\", {\n                className: \"choice-div\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 300\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                type: \"radio\",\n                checked: checked,\n                value: correct,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 301\n                },\n                __self: this\n              }), React.createElement(\"span\", {\n                className: \"choice-text\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 302\n                },\n                __self: this\n              }, \" \", text));\n            }\n\n            if (questions.choice[3] !== 'undefined') {\n              var value = '';\n              var text = '';\n              var correct = \"\";\n\n              if (typeof questions.choice[3].$ !== 'undefined') {\n                var _ch3 = questions.choice[3];\n                correct = 'yes';\n                text = _ch3._;\n                correctAnswer = text;\n              } else {\n                correct = '';\n                text = questions.choice[3];\n              }\n\n              var checked = _this3.isChecked(givenAnswer, text);\n\n              choice4 = React.createElement(\"div\", {\n                className: \"choice-div\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 314\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                type: \"radio\",\n                checked: checked,\n                value: correct,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 315\n                },\n                __self: this\n              }), React.createElement(\"span\", {\n                className: \"choice-text\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 316\n                },\n                __self: this\n              }, \" \", text));\n            }\n\n            if (_this3.isAnswerCorrect(givenAnswer, correctAnswer)) {\n              obtainMark = maxMarks;\n              correctIcon = React.createElement(\"button\", {\n                className: \"btn btn-xs btn-success\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 322\n                },\n                __self: this\n              }, \"Correct\");\n            } else {\n              obtainMark = 0;\n              correctIcon = React.createElement(\"button\", {\n                className: \"btn btn-xs btn-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 325\n                },\n                __self: this\n              }, \"false\");\n            }\n\n            obtainMarkField = React.createElement(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              readonly: \"readonly\",\n              value: obtainMark,\n              name: questionId,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 328\n              },\n              __self: this\n            });\n          }\n\n          if (questions.questionType[0].replace(/ /g, '') == 'Subjective') {\n            answers = React.createElement(\"textarea\", {\n              value: givenAnswer,\n              className: \"form-control\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 335\n              },\n              __self: this\n            });\n            obtainMarkField = React.createElement(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: questionId,\n              defaultValue: obtainMark,\n              max: maxMarks,\n              onBlur: function onBlur(e) {\n                return _this3.handleEnterMark(maxMarks, questionId, e);\n              },\n              name: questionId,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 337\n              },\n              __self: this\n            }); //this.insertValue(questionId,obtainMark);\n          }\n\n          return React.createElement(\"div\", {\n            className: \"quiz-questions row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 345\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-md-5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 346\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            className: \"qui_id\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347\n            },\n            __self: this\n          }, questionId, \" \"), React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 348\n            },\n            __self: this\n          }, questions.question[0]), queDes), React.createElement(\"div\", {\n            className: \"col-md-5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"answers-div\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352\n            },\n            __self: this\n          }, answers, choice1, choice2, choice3, choice4)), React.createElement(\"div\", {\n            className: \"col-md-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"maeks-Desc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 361\n            },\n            __self: this\n          }, correctIcon, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 363\n            },\n            __self: this\n          }, \"Max Mark: \", maxMarks), obtainMarkField)));\n        });\n      }\n    }\n  }, {\n    key: \"handleGo\",\n    value: function handleGo(url, e) {\n      this.props.history.push(url, {\n        some: 'state'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var descriptions = this.state.descriptions;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"page-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"page-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"portlet box green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"portlet-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-cogs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }), this.state.quiz_title), \"  \", React.createElement(\"button\", {\n        className: \"btn btn-success pull-right white\",\n        onClick: this.handleBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"Back\")), React.createElement(\"div\", {\n        className: \"portlet-body flip-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        method: \"post\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, this.renderDescriptions(), this.renderQuestions(), React.createElement(\"div\", {\n        className: \"quiz-questions row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"Submit As Reviewed\")))))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ReviewAnswers;\n}(Component);\n\nexport default ReviewAnswers;","map":{"version":3,"sources":["/Users/poojamishra/Documents/control-panel/src/components/ReviewAnswers.js"],"names":["React","Component","ReactDOM","axios","Redirect","Header","Footer","Sidebar","baseUrl","logo","ReviewAnswers","handleSubmit","event","preventDefault","self","formData","FormData","document","querySelector","append","state","quizs_taken_id","method","url","data","then","response","console","log","catch","handleBack","props","history","push","btoa","quiz_id","some","userData","JSON","parse","localStorage","getItem","quiz_title","quiz_description","quiz_file","quizs_taken","quiz_answers","quiz_data","thumbImageBase","quizBase","url_string","window","location","href","URL","atob","searchParams","get","file","post","res","errorCode","quizs","quiz","setState","title","description","id","descriptions","questions","items","QuestionId","answer","map","answers","question_id","replace","obtain_mark","a","b","checked","maxMarks","questionId","e","parseInt","target","value","alert","obtainMark","getElementById","setTimeout","heading","content","item","marks","givenAnswer","getGivenAnswerByQuestionId","correctIcon","getobtainMarkByQuestionId","obtainMarkField","correctAnswer","type","$","queDes","resourceUrl","choice1","choice2","choice3","choice4","questionType","choice","text","correct","ch","_","isChecked","isAnswerCorrect","handleEnterMark","question","renderDescriptions","renderQuestions"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom'\n\nimport Header  from './Common/Header'\nimport Footer  from './Common/Footer'\nimport Sidebar  from './Common/Sidebar'\nimport baseUrl from '../CommonFunctions';\n\n \n\nimport logo from '.././assets/logo.png';\n\n\n\n\nclass ReviewAnswers extends Component {\n     constructor(){\n        super()\n     \tthis.state = {\n     \t\tuserData:JSON.parse(localStorage.getItem(\"userData\")),\n\t\t    data: [],\n        quiz_id:'',\n        quiz_title:'',\n        quiz_description:'',\n        quiz_file:'',\n        quizs_taken:[],\n        quizs_taken_id:'',\n        quiz_answers:[],\n        quiz_data:[],\n\t\t    thumbImageBase:'https://s3.us-east-2.amazonaws.com/holdingcallassets/thumb_image/',\n        quizBase:'https://s3.us-east-2.amazonaws.com/holdingcallassets/quiz/',\n        quizs_taken:[],\n        descriptions:[],\n        questions:[]\n    \n\n\t\t  }\n     }\n   \n\n\ncomponentDidMount() {\n       var url_string = window.location.href\n      var url = new URL(url_string);\n      var quizs_taken_id = atob(url.searchParams.get(\"quizs_taken_id\"));\n      var quiz_id = atob(url.searchParams.get(\"quiz_id\"));\n      var file = atob(url.searchParams.get(\"file\"));\n \n      \n    axios.post(baseUrl('quiz?id='+quiz_id,'api'))\n      .then(res => {\n             if(res.data.errorCode=='200'){\n              var quizs=(res.data.quiz);\n                     const data = quizs[0];\n                      this.setState({quiz_file: data.file});\n                      this.setState({quiz_title: data.title});\n                      this.setState({quiz_description: data.description});\n                      this.setState({quiz_id: data.id});\n\n                      \n              }\n      });\n      \n        axios.post(baseUrl('review-answers?quizs_taken_id='+quizs_taken_id+'&file='+file,'api'))\n        .then(res => {\n               if(res.data.errorCode=='200'){\n                \n                  this.setState({quizs_taken_id: quizs_taken_id});\n                   this.setState({quizs_taken: res.data.quizs_taken});\n                   this.setState({quiz_answers: res.data.quiz_answers});\n                   this.setState({quiz_data: res.data.quiz_data});\n                   this.setState({descriptions: res.data.quiz_data.quiz.descriptions[0]});\n                   this.setState({questions: res.data.quiz_data.quiz.items[0]});\n \n\n                 }\n        });\n\n  }\n\n \n handleSubmit= event =>{\n  event.preventDefault();\n   var self = this;\n  var formData = new FormData(document.querySelector('form'));\n      formData.append('quizs_taken_id', this.state.quizs_taken_id);\n      axios({\n            method: 'post',\n            url:  baseUrl('update-quiz-result','api'),\n            data: formData,\n           })\n          .then(function (response) {\n             // self.props.history.push('/my-quizs', { some: 'state' })\n              console.log(response);\n          })\n          .catch(function (response) {\n              //handle error\n              console.log(response);\n          }\n    )\n }\n\n\n  getGivenAnswerByQuestionId(QuestionId){\n    var answer='';\n         this.state.quiz_answers.map(answers => { \n           if((answers.question_id).replace(/ /g,'')==(QuestionId).replace(/ /g,'')){\n            answer= answers.answer;\n            \n           }\n         })\n     return answer  ;\n  }\n\n    getobtainMarkByQuestionId(QuestionId){\n    var obtain_mark='0';\n         this.state.quiz_answers.map(answers => { \n           if((answers.question_id).replace(/ /g,'')==(QuestionId).replace(/ /g,'')){\n            obtain_mark= answers.obtain_mark;\n            if(obtain_mark==''){obtain_mark=0;}\n           }\n         })\n     return obtain_mark  ;\n  }\n\n\n\n  isChecked(a,b){\n   var checked=\"\";\n      if(a==b){\n        checked=\"checked\";\n      }\n   return checked;\n  }\n\n   isAnswerCorrect(a,b){\n   var checked=true;\n      if(a==b){\n        checked=false;\n      }\n   return checked;\n  }\n\n  handleBack = event =>{\n  \t  //window.location='/all-submitted-quizs/?quiz='+btoa(this.state.quiz_id);\n                      this.props.history.push('/all-submitted-quizs/?quiz='+btoa(this.state.quiz_id) , { some: 'state' })\n\n    }\n\n\nhandleEnterMark(maxMarks,questionId, e){\nif(parseInt(e.target.value) > parseInt(maxMarks)){\n  e.target.value=0;\nreturn false;\n}\n\nif(parseInt(e.target.value) <1){\n  e.target.value=0;\nreturn false;\n}\ne.target.value=e.target.value;\nif(e.target.value ==''){\n    e.target.value=0;\nreturn false;\n}\n\n\n\n var formData = new FormData();\n      formData.append('quizs_taken_id', this.state.quizs_taken_id);\n      formData.append('questionId', questionId);\n      formData.append('obtain_mark', e.target.value);\n      \n\n      axios({\n            method: 'post',\n            url: baseUrl('update-quiz-result','api'),\n            data: formData,\n           })\n          .then(function (response) {\n             // self.props.history.push('/my-quizs', { some: 'state' })\n             console.log(response.data.errorCode);\n              if(response.data.errorCode==200){\n              alert('Marks updated');\n\n              }\n          })\n          .catch(function (response) {\n              //handle error\n              console.log(response);\n          }\n    )\n\n\n\n\n\n\n}\n\ninsertValue(questionId,obtainMark){\nif(questionId !='' && questionId !=null){\n console.log('response');\n\tconsole.log(document.getElementById(questionId));\n\tconsole.log('response');\n\tif (typeof document.getElementById(questionId) !== 'undefined' && document.getElementById(questionId) !==null && document.getElementById(questionId) !=''){\n \t         setTimeout(function(){\n            if (typeof document.getElementById(questionId) !='undefined' && document.getElementById(questionId) !=null && document.getElementById(questionId) !=''){\n                document.getElementById(questionId).value = obtainMark \n            }\n              \n              }, 2000);\n\t     }\n }\n}\n\n  renderDescriptions(){\n          if (typeof this.state.descriptions.description !== 'undefined'){\n            \n              return this.state.descriptions.description.map(description => {\n                       return (\n                         <div className=\"quiz-description-blocks\">\n                            <h2>{description.heading} </h2>\n                            <p>{description.content} </p>\n                         </div>\n                       );\n                   })\n          }\n    }\n\n\n\n  renderChoices(){\n\n  }\n  \n  renderQuestions(){\n     \n      if (typeof this.state.questions.item !== 'undefined'){\n           return this.state.questions.item.map(questions => {\n                    var questionId=(questions.questionId[0]).replace(/ /g,'');\n                    var maxMarks=questions.marks[0];\n                    var givenAnswer= this.getGivenAnswerByQuestionId(questionId);\n                    var correctIcon=\"\";\n                    var obtainMark=this.getobtainMarkByQuestionId(questionId);\n                    \n                    var obtainMarkField=\"\";\n                    var correctAnswer='';\n\n                    console.log(givenAnswer);\n\n                       var type=(questions.$);\n                       var queDes='';\n                       if (typeof type !== 'undefined'){\n                          if(type.type=='image'){  queDes=<img src={questions.resourceUrl[0]}/>   }\n                          if(type.type=='video'){   \n                                  queDes=    <video width=\"320\" height=\"240\" controls> <source src={questions.resourceUrl[0]} type=\"video/mp4\" /> <source src={questions.resourceUrl[0]} type=\"video/ogg\" /> </video>\n                          }\n                       }\n                       var answers='';\n                       var choice1='';\n                          var choice2='';\n                          var choice3='';\n                          var choice4='';\n                          \n                       if(questions.questionType[0]  == 'Objective') {\n                                  if(questions.choice[0]  !== 'undefined') {\n                                      var value='';\n                                      var text='';\n                                      var correct=\"\";\n                                      if (typeof questions.choice[0].$ !== 'undefined'){ let ch= questions.choice[0] ; correct='yes'; text=ch._ ; correctAnswer=text;}\n                                      else{ correct=''; text=questions.choice[0] }\n                                      var checked= this.isChecked(givenAnswer,text);\n                                      choice1=<div className=\"choice-div\">\n                                                <input   type=\"radio\" checked= {checked}  value={correct} /> \n                                                <span className=\"choice-text\"> {text}</span>\n                                              </div>\n                                  }\n                                  if(questions.choice[1] !== 'undefined') {\n                                      var value='';\n                                      var text='';\n                                      var correct=\"\";\n                                      if (typeof questions.choice[1].$ !== 'undefined'){ let ch= questions.choice[1] ; correct='yes'; text=ch._ ; correctAnswer=text;}\n                                      else{ correct=''; text=questions.choice[1] }\n                                      var checked= this.isChecked(givenAnswer,text);\n                                      choice2=<div className=\"choice-div\">\n                                                <input   type=\"radio\" checked= {checked}  value={correct} /> \n                                                <span className=\"choice-text\"> {text}</span>\n                                              </div>\n                                  }\n                                  if(questions.choice[2] !== 'undefined') {\n                                      var value='';\n                                      var text='';\n                                      var correct=\"\";\n                                      if (typeof questions.choice[2].$ !== 'undefined'){ let ch= questions.choice[2] ; correct='yes'; text=ch._  ; correctAnswer=text;  }\n                                      else{ correct=''; text=questions.choice[2] }\n                                     var checked= this.isChecked(givenAnswer,text);\n                                      choice3=<div className=\"choice-div\">\n                                                <input   type=\"radio\" checked= {checked}  value={correct} /> \n                                                <span className=\"choice-text\"> {text}</span>\n                                              </div>\n                                  }\n\n                                  if(questions.choice[3]  !== 'undefined') {\n                                      var value='';\n                                      var text='';\n                                      var correct=\"\";\n                                      \n                                      if (typeof questions.choice[3].$ !== 'undefined'){ let ch= questions.choice[3] ; correct='yes'; text=ch._ ; correctAnswer=text; }\n                                      else{ correct=''; text=questions.choice[3] }\n                                      var checked= this.isChecked(givenAnswer,text);\n                                      choice4=<div className=\"choice-div\">\n                                                <input  type=\"radio\" checked= {checked} value={correct} /> \n                                                <span className=\"choice-text\"> {text}</span>\n                                              </div>\n                                  }\n\n                         if(this.isAnswerCorrect(givenAnswer,correctAnswer)){\n                            obtainMark=maxMarks;\n                            correctIcon=<button className=\"btn btn-xs btn-success\">Correct</button>\n                         }else{\n                          obtainMark=0;\n                           correctIcon=<button className=\"btn btn-xs btn-danger\">false</button>\n                         }\n                          \n                          obtainMarkField=<input type=\"text\" className=\"form-control\" readonly=\"readonly\" value= {obtainMark}  name= {questionId}/>\n                          \n\n                          \n                       }\n                      if((questions.questionType[0]).replace(/ /g,'')  == 'Subjective') {\n\n                        answers= <textarea   value={givenAnswer}   className=\"form-control\"></textarea>\n                        \n                        obtainMarkField=<input type=\"number\" className=\"form-control\"   id= {questionId} defaultValue={obtainMark}  max={maxMarks} onBlur={(e) => this.handleEnterMark(maxMarks,questionId, e)}   name= {questionId}/>\n                        //this.insertValue(questionId,obtainMark);\n                       }\n\n                      \n\n\n                       return (\n                         <div className=\"quiz-questions row\">\n                                <div className=\"col-md-5\">\n                                  <h4 className=\"qui_id\">{questionId} </h4>\n                                  <h2>{questions.question[0]}</h2>\n                                  {queDes}\n                                </div>\n                               <div className=\"col-md-5\">\n                                     <div className=\"answers-div\">\n                                        {answers}\n                                        {choice1}\n                                        {choice2}\n                                        {choice3}\n                                        {choice4}\n                                      </div>  \n                               </div>\n                               <div className=\"col-md-2\">\n                                 <div className=\"maeks-Desc\">\n                                  {correctIcon}\n                                  <h4>Max Mark: {maxMarks}</h4> \n                                  {obtainMarkField}\n                                 </div>\n\n                               </div>\n                         </div>\n                       );\n                   })\n      }\n\n  }\n\n\n\n     \n\n     handleGo(url, e){\n      this.props.history.push(url, { some: 'state' })\n     }\n\n\n render(){\n  var descriptions=(this.state.descriptions);\n        return (\n              <div>\n              <Header/>\n              <br/><br/>\n              <div className=\"page-container\">\n              <Sidebar/>\n\n\t\t           <div className=\"page-content-wrapper\">\n          \t\t\t\t\t<div className=\"page-content\">\n                            <div className=\"portlet box green\"> \n                                 <div className=\"portlet-title\"><div className=\"caption\"><i className=\"fa fa-cogs\"></i>{this.state.quiz_title}</div>  <button className=\"btn btn-success pull-right white\"  onClick={this.handleBack} >Back</button></div>\n                                 <div className=\"portlet-body flip-scroll\">\n                                 <form  method=\"post\" onSubmit={this.handleSubmit}>\n                                 {this.renderDescriptions() }\n                                 \n                                 {this.renderQuestions() }  \n                                 <div className=\"quiz-questions row\">\n                                 <button className=\"btn btn-success pull-right\" >Submit As Reviewed</button>\n                                 </div>\n                                </form>\n                                \n                                 </div>\n\n\n\n                             </div>\n\n          \t\t\t\t\t</div>\n\t\t\t\t\t     </div>\n\n\n\n         \n            \n             </div>\n             <Footer/>\n             </div>\n        \t)\n\n }\n\n}\n\nexport default ReviewAnswers"]},"metadata":{},"sourceType":"module"}